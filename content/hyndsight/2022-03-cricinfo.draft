---
author: robjhyndman
comments: true
date: 2022-03-03
title: "The cricketdata package"
slug: cricketdata
output: 
  html_document:
    keep_md: true
mathjax: true
categories:
  - R
  - data
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  echo = TRUE,
  cache = TRUE
)
options(digits = 3, width = 75)

# Okabi-Ito colours
options(
  ggplot2.discrete.colour = c("#D55E00", "#0072B2","#009E73", "#CC79A7", "#E69F00", "#56B4E9", "#F0E442")
)
```

```{r packages}
library(cricketdata)
library(tidyverse)
```

# Now on CRAN

This package has been around for a few years [on github](https://github.com/robjhyndman/cricketdata), and I finally got around to submitting it to [CRAN](https://cloud.r-project.org/package=cricketdata). There are only four functions:

 * `fetch_cricinfo()`: Fetch team data on international cricket matches provided by [ESPNCricinfo](https://www.espncricinfo.com/).
 * `fetch_player_data()`: Fetch individual player data on international cricket matches provided by [ESPNCricinfo](https://www.espncricinfo.com/).
 * `find_player_id()`: Search for the player ID on [ESPNCricinfo](https://www.espncricinfo.com/).
 * `fetch_cricsheet()`: Fetch ball-by-ball, match and player data from [Cricsheet](https://cricsheet.org).
 
[Jacquie Tran](https://www.jacquietran.com) wrote the first version of the `fetch_cricsheet()` function, and [the vignette](http://pkg.robjhyndman.com/cricketdata/articles/cricsheet.html) which demonstrates it.

Here are some examples in using the Cricinfo functions. This is based on the other [package vignette](http://pkg.robjhyndman.com/cricketdata/articles/cricinfo.html).

## Women's T20 bowling data

```{r}
# Fetch all Women's T20 data
wt20 <- fetch_cricinfo("T20", "Women", "Bowling")
```

```{r woment20, message=FALSE}
wt20 %>%
  mutate(Economy = parse_number(Economy)) %>%
  select(Player, Country, Matches, Runs, Wickets, Economy, StrikeRate)
```

```{r woment20graph, fig.width=10, fig.height=8}
wt20 %>%
  filter(Wickets > 20, !is.na(Country)) %>%
  ggplot(aes(y = StrikeRate, x = Country)) +
  geom_boxplot() +
  geom_point(alpha = 0.3, col = "blue") +
  ggtitle("Women T20: Strike Rates") +
  ylab("Balls per wicket") +
  coord_flip()
```

## Australian men's ODI data by innings

```{r, message=FALSE}
# Fetch all Australian Men's ODI data by innings
menODI <- fetch_cricinfo("ODI", "Men", "Batting", type = "innings", country = "Australia")
```

```{r menodi, message=FALSE}
menODI 
```

```{r menodigraph, warning=FALSE, message=FALSE}
menODI %>%
  ggplot(aes(y = Runs, x = Date)) +
  geom_point(alpha = 0.2, col = "#D55E00") +
  geom_smooth() +
  ggtitle("Australia Men ODI: Runs per Innings")
```

## Indian test fielding data

```{r, message=FALSE}
Indfielding <- fetch_cricinfo("Test", "Men", "Fielding", country = "India")
```

```{r indiafielding}
Indfielding
```

```{r indiafieldinggraph}
Indfielding %>%
  mutate(wktkeeper = (CaughtBehind > 0) | (Stumped > 0)) %>%
  ggplot(aes(x = Matches, y = Dismissals, col = wktkeeper)) +
  geom_point() +
  ggtitle("Indian Men Test Fielding")
```

## Meg Lanning's ODI batting

```{r, message=FALSE}
meg_lanning_id <- find_player_id("Meg Lanning")$ID
MegLanning <- fetch_player_data(meg_lanning_id, "ODI") %>%
  mutate(NotOut = (Dismissal == "not out"))
```

```{r meglanning}
MegLanning 
```

```{r meglanninggraph}
# Compute batting average
MLave <- MegLanning %>%
  summarise(
    Innings = sum(!is.na(Runs)),
    Average = sum(Runs, na.rm = TRUE) / (Innings - sum(NotOut))
  ) %>%
  pull(Average)
names(MLave) <- paste("Average =", round(MLave, 2))
# Plot ODI scores
ggplot(MegLanning) +
  geom_hline(aes(yintercept = MLave), col="gray") +
  geom_point(aes(x = Start_Date, y = Runs, col = NotOut)) +
  ggtitle("Meg Lanning ODI Scores") +
  scale_y_continuous(sec.axis = sec_axis(~., breaks = MLave))
```
